%input#persisted{type: "hidden", value: @output_task.persisted? ? "true" : "false"}
%input#output_task_id{type: "hidden", value: @output_task.persisted? ? @output_task.uuid : ""}
= simple_form_for @output_task, html: { class: "form-horizontal" } do |f|
  .container
    .row
      .col-md-8
        .form-group
          %label.col-xs-2.control-label Start Date *
          .col-xs-4
            .controls
              = f.text_field :start_date, data: { :date_format => 'YYYY-MM-DD' }, :class => 'form-control date_pick', placeholder: 'Year-Month-Day', error_html: { class: "err_msg" }
          %label.col-xs-2.control-label End Date *
          .col-xs-4
            .controls
              = f.text_field :end_date, data: { :date_format => 'YYYY-MM-DD' }, :class => 'form-control date_pick', placeholder: 'Year-Month-Day', error_html: { class: "err_msg" }
        .form-group
          %label.col-xs-2.control-label.text-left Farm *
          .col-xs-4
            = f.input :farm_id, collection: Farm.all.map{ |p| [p.name, p.uuid] }, label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
          %label.col-xs-2.control-label.text-left Zone *
          .col-xs-4
            - if !@output_task.farm_id.nil?
              = f.input :zone_id, collection: Zone.where(farm_id: @output_task.farm_id), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
            - elsif params[:output_task].nil? || params[:output_task][:farm_id].nil? || params[:output_task][:farm_id]==""
              = f.input :zone_id, collection: Zone.none, label: false, input_html: {class: "form-control", disabled: "disabled"}, error_html: {class: "err_msg"}
            - else
              = f.input :zone_id, collection: Zone.where(farm_id: params[:output_task][:farm_id]), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
        .form-group
          %label.col-xs-2.control-label.text-left Area *
          .col-xs-4
            - if !@output_task.zone_id.nil?
              = f.input :area_id, collection: Area.where(zone_id: @output_task.zone_id), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
            - elsif params[:output_task].nil? || params[:output_task][:zone_id].nil? || params[:output_task][:zone_id]==""
              = f.input :area_id, collection: Area.none, label: false, input_html: {class: "form-control", disabled: "disabled"}, error_html: {class: "err_msg"}
            - else
              = f.input :area_id, collection: Area.where(zone_id: params[:output_task][:zone_id]), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
          %label.col-xs-2.control-label.text-left Block *
          .col-xs-4
            - if !@output_task.area_id.nil?
              = f.input :block_id, collection: Block.where(area_id: @output_task.area_id), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
            - elsif params[:output_task].nil? || params[:output_task][:area_id].nil? || params[:output_task][:area_id]==""
              = f.input :block_id, collection: Block.none, label: false, input_html: {class: "form-control", disabled: "disabled"}, error_html: {class: "err_msg"}
            - else
              = f.input :block_id, collection: Block.where(area_id: params[:output_task][:area_id]), label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
        .form-group
          %label.col-xs-2.control-label.text-left Project *
          .col-xs-4
            = f.input :planting_project_id, label: false, input_html: {class: "form-control planting_project_id"}, error_html: {class: "err_msg"}, as: :hidden
            - if !@output_task.planting_project_id.nil? && @output_task.planting_project_id != ""
              %input.form-control.planting_project_name{:readonly => "true", :type => "text", :value => PlantingProject.find_by_uuid(@output_task.planting_project_id).name}/
            - elsif params[:output_task].nil? || params[:output_task][:planting_project_id].nil? || params[:output_task][:planting_project_id]==""
              %input.form-control.planting_project_name{:type => "text", readonly: true }
            - else
              %input.form-control.planting_project_name{:readonly => "true", :type => "text", :value => PlantingProject.find_by_uuid(params[:output_task][:planting_project_id]).name}/
          %label.col-xs-2.control-label.text-left Tree amount *
          .col-xs-4
            = f.input :tree_amount, label: false, input_html: { class: "form-control tree_amount" }, error_html: {class: "err_msg"}
          
        .form-group
          %label.col-xs-2.control-label.text-left App Name *
          .col-xs-10
            - if !@output_task.planting_project_id.nil?
              = f.input :name, collection: App.where(planting_project_id: @output_task.planting_project_id, app_type: "OUTPUT"), label: false, input_html: { class: "form-control" }, error_html: {class: "err_msg"}
            - elsif params[:output_task].nil? || params[:output_task][:planting_project_id].nil? || params[:output_task][:planting_project_id]==""
              = f.input :name, collection: App.none, label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
            - else
              = f.input :name, collection: App.where(planting_project_id: params[:output_task][:planting_project_id], app_type: "OUTPUT"), label: false, input_html: { class: "form-control" }, error_html: {class: "err_msg"}
        
        .form-group
          %label.col-xs-2.control-label.text-left Labor *
          .col-xs-9
            = f.association :labor, label: false, input_html: {class: "form-control"}, error_html: {class: "err_msg"}
          .col-xs-1
            = link_to add_new_labor_out_task_path, :remote => true, class: 'btn btn-primary btn-add', title: "Add new labor" do
              %i.fa.fa-plus-circle
          
        .form-group
          %label.col-xs-2.control-label.text-left Reference No *
          .col-xs-10
            = f.input :reference_number, label: false, input_html: { class: "form-control" }, error_html: {class: "err_msg"}
          
        .form-group
          %label.col-xs-2.control-label.text-left Equipments
          .col-xs-10
            = f.select :equipments, options_for_select("Select items"), { include_blank: true }, { class: 'chosen-select-equipment form-control item-select-equipments', multiple: false }
            = hidden_field_tag 'equipments', ''
        
        .form-group
          %label.col-xs-2.control-label.text-left Note
          .col-xs-10
            = f.input :note, label: false, input_html: { class: "form-control" }
          %span.help-block= f.error :note  
        
        .form-group#distribution
          - if @output_task.persisted?
            %h3= "Distribution - "+PlantingProject.find_by_uuid(@output_task.planting_project_id).name
            %hr
            - Distribution.where(planting_project_id: @output_task.planting_project_id).order("order_of_display ASC").each do |d|
              .form-group
                %label.col-xs-3.control-label.text-left= d.label
                - d.uoms.split(",").each_with_index do |uom, uom_index|
                  .col-xs-3
                    .input-group
                      .input.float.required
                        %input.numeric.float.required.form-control{id: "distribution_"+uom_index.to_s+"_"+d.order_of_display.to_s,
                                                                   onchange: "javascript:"+d.function_name+"();",
                                                                   type: "number", step: "any",
                                                                   name: "distribution_amounts[]",
                                                                   readonly: d.read_only,
                                                                   value: OutputDistribution.find_by(output_task_id: @output_task.uuid, distribution_id: d.uuid, unit_measure_id: uom.split("|").first).amount}/
                        
                        %input{type: "hidden", name: "distribution_ids[]", :value => d.uuid}/
                        %input{type: "hidden", name: "uom_ids[]", :value => uom.split("|").first}/
                      %span.input-group-addon= uom.split("|").second
          
                - if d.to_nursery
                  .col-xs-3
                    %input{type: "hidden", name: "to_nursery_distribution", :value => d.uuid}
                    %select.form-control{:name => "to_nursery_warehouses"}
                      - Warehouse.where(warehouse_type_uuid: WarehouseType.find_by_name("Nursery Warehouse").uuid, active: true).each do |wh|
                        - if wh.uuid == @output_task.nursery_warehouse_id
                          %option{:value => wh.uuid, :selected => "selected"}= wh.name
                        - else
                          %option{:value => wh.uuid}= wh.name
          
                - if d.to_finish
                  .col-xs-3
                    %input{type: "hidden", name: "to_finish_distribution", :value => d.uuid}
                    %select.form-control{:name => "to_finish_warehouses"}
                      - Warehouse.where(warehouse_type_uuid: WarehouseType.find_by_name("Finished Goods Warehouse").uuid, active: true).each do |wh|
                        - if wh.uuid == @output_task.finish_warehouse_id
                          %option{:value => wh.uuid, :selected => "selected"}= wh.name
                        - else
                          %option{:value => wh.uuid}= wh.name
          
            :javascript
              function coconutAutoCalc(){var distribution_0_4 = greaterThanZero("#distribution_0_4");var distribution_0_7 = greaterThanZero("#distribution_0_7");var distribution_0_8 = greaterThanZero("#distribution_0_8");var distribution_0_9 = greaterThanZero("#distribution_0_9");var distribution_0_11 = greaterThanZero("#distribution_0_11");$("#distribution_0_3").val(parseInt(distribution_0_8) + parseInt(distribution_0_9));$("#distribution_0_2").val(parseInt($("#distribution_0_3").val()) + parseInt(distribution_0_4));$("#distribution_0_6").val(distribution_0_11);$("#distribution_0_5").val(parseInt($("#distribution_0_6").val()) + parseInt(distribution_0_7));$("#distribution_0_1").val(parseInt($("#distribution_0_2").val()) + parseInt($("#distribution_0_5").val()));$("#distribution_0_10").val(parseInt(distribution_0_4) + parseInt(distribution_0_7));}
              function jackfruitAutoCalc(){var distribution_0_3 = greaterThanZero("#distribution_0_3");var distribution_1_3 = greaterThanZero("#distribution_1_3");var distribution_0_4 = greaterThanZero("#distribution_0_4");var distribution_1_4 = greaterThanZero("#distribution_1_4");var distribution_0_5 = greaterThanZero("#distribution_0_5");var distribution_1_5 = greaterThanZero("#distribution_1_5");var distribution_0_6 = greaterThanZero("#distribution_0_6");var distribution_1_6 = greaterThanZero("#distribution_1_6");var distribution_0_8 = greaterThanZero("#distribution_0_8");var distribution_1_8 = greaterThanZero("#distribution_1_8");$("#distribution_0_9").val(distribution_0_5 + distribution_0_6);$("#distribution_1_9").val(distribution_1_5 + distribution_1_6);$("#distribution_0_2").val(distribution_0_3 + distribution_0_4 + distribution_0_5);$("#distribution_1_2").val(distribution_1_3 + distribution_1_4 + distribution_1_5);$("#distribution_0_1").val(distribution_0_3 + distribution_0_4 + distribution_0_5 + distribution_0_6);$("#distribution_1_1").val(distribution_1_3 + distribution_1_4 + distribution_1_5 + distribution_1_6);if(distribution_0_8<=(distribution_0_3+distribution_0_4)){$("#distribution_0_7").val(distribution_0_3+distribution_0_4-distribution_0_8);}else{$("#distribution_0_8").val(distribution_0_3+distribution_0_4);}if(distribution_1_8<=(distribution_1_3+distribution_1_4)){$("#distribution_1_7").val(distribution_1_3+distribution_1_4-distribution_1_8);}else{$("#distribution_1_8").val(distribution_1_3+distribution_1_4);}}function greaterThanZero(name){var retVal=0;if($(name).val()!="" && parseInt($(name).val())<0){$(name).val(0);}else if($(name).val()==""){$(name).val(0);}else{retVal=parseInt($(name).val());}return retVal;}
          
        .form-group
          .col-xs-7
            = f.input :created_by, :as => :hidden, input_html: { value: current_user.uuid }
          %span.help-block= f.error :created_by  
        .form-group
          .col-xs-12
            .pull-right
              = render partial: 'form_button', locals: { f: f }
      .col-md-4
        = render "error", :obj => @output_task
.form-modal
- content_for :javascript_body do
  = javascript_include_tag "output_tasks"
